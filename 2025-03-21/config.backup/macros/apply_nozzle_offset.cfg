[gcode_macro _APPLY_NOZZLE_OFFSET]
description: Determine the global nozzle offset and apply
variable_z_homing_temperature: 150      # Temperature that we home the nozzle at to determine Z=0
variable_reference_position: 5.0        # A safe Z position at which we'll apply the offset change
variable_expansion_factor: 0.00045      # Amount hotend lengthens by per 1C temperature rise, within ±3%
variable_contact_compensation: 0.05     # Static Offset to compensate for Beacon contact latency
                                        # Values from 0.03 to 0.07 appear to be typical for the Plus 4
variable_hotend_temp: 250               # Target hotend temp (typically set by PRINT_START)
gcode:
    # Set our working variables.  We treat everything as floats for these calculations
    {% set z_home_temp = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].z_homing_temperature)|float %}
    {% set z_home_x = printer.configfile.settings.beacon.home_xy_position[0] %}
    {% set z_home_y = printer.configfile.settings.beacon.home_xy_position[1] %}
    {% set z_speed = (printer.configfile.settings['stepper_z'].homing_speed)|float * 60 %}
    {% set z_hop = (printer.configfile.settings['beacon'].home_z_hop)|float %}
    {% set reference_position = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].reference_position)|float %}
    {% set expansion_factor = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].expansion_factor)|float %}
    {% set contact_comp = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].contact_compensation)|float %}
    {% set hotend_temp = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].hotend_temp)|float %}

    # Calculate Offset and sanity check it so we don't end up etching the build plate
    {% set temperature_offset = ((hotend_temp - z_home_temp) * expansion_factor)|float %}
    {% if temperature_offset < 0 %}
        {% set temperature_offset = 0|float %}
    {% endif %}

    # Determine the Z target position
    {% set target_position = (reference_position + contact_comp + temperature_offset)|float %}

    # Report to the console what we've determined
    { action_respond_info("Applying Z offset adjustment for hotend temperature of %.1f°C" % hotend_temp|float) }
    { action_respond_info("  Expansion Coefficient = %.6f" % (expansion_factor)|float) }
    { action_respond_info("  Temperature Offset    = %.6f" % (temperature_offset)|float) }
    { action_respond_info("  Contact Compensation  = %.3f" % (contact_comp)|float) }
    { action_respond_info("  Total Offset          = %.6f" % (temperature_offset + contact_comp)|float) }
    { action_respond_info("  Reference Position    = %.1f" % (reference_position)|float) }
    { action_respond_info("  Target Position       = %.6f" % (target_position)|float) }

    SET_GCODE_OFFSET Z=0                            # Clear any pre-existing Gcode offsets
    G1 Z{target_position} F{z_speed}                # Move Z to determined target position
    G1 X{z_home_x} Y{z_home_y} F7200                # Move X/Y to Z homing position 
    M400                                            # Wait for prior gcode-commands to finish
    SET_KINEMATIC_POSITION Z={reference_position}   # Set target position to be the reference position
    G1 Z{reference_position} F600                   # Move Z to reference position.  Ideally the bed should not move
    M400
